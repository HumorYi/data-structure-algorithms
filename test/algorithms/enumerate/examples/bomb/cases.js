/**
 * 炸弹人
 *
 * 有一枚炸弹，杀伤距离超长，可以消灭杀伤范围内所有的敌人，放在空地哪个位置才可以消灭最多的敌人？
 *
 * # 墙（一种能被炸掉，另一种不能被炸掉，由于只有一枚炸弹，炸弹是不能穿墙的）
 * G 敌人
 * . 空地
 */
export default [
  {
    input: [
      ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '#', 'G', 'G', 'G', '.', '#'],
      ['#', '#', '#', '.', '#', 'G', '#', 'G', '#', 'G', '#', 'G', '#'],
      ['#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', 'G', '#'],
      ['#', 'G', '#', '.', '#', '#', '#', '.', '#', 'G', '#', 'G', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '.', '#', '.', 'G', 'G', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', '.', '#', '.', '#', '#', '#'],
      ['#', '#', 'G', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', '#', '#', '.', '#', 'G', '#'],
      ['#', '.', '.', '.', 'G', '#', 'G', 'G', 'G', '.', 'G', 'G', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', 'G', '#', '.', '#', 'G', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '#', 'G', '.', 'G', 'G', '#'],
      ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#']
    ],
    output: {
      axis: [9, 9],
      sum: 8
    }
  },
  {
    input: [
      ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '#', 'G', 'G', 'G', '.', '#'],
      ['#', '#', '#', '.', '#', 'G', '#', 'G', '#', 'G', '#', 'G', '#'],
      ['#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', 'G', '#'],
      ['#', 'G', '#', '.', '#', '#', '#', '.', '#', 'G', '#', 'G', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '.', '#', '.', 'G', 'G', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', '.', '#', '.', '#', '.', '#'],
      ['#', '#', 'G', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', '#', '#', '.', '#', 'G', '#'],
      ['#', '.', '.', '.', 'G', '#', 'G', 'G', 'G', '.', 'G', 'G', '#'],
      ['#', 'G', '#', '.', '#', 'G', '#', 'G', '#', '.', '#', 'G', '#'],
      ['#', 'G', 'G', '.', 'G', 'G', 'G', '#', 'G', '.', 'G', 'G', '#'],
      ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#']
    ],
    output: {
      // 枚举算法，没有考虑小人哪些点是能够到底的，例如：敌人、墙是不能到达的
      // 使用深度、广度优先搜索算法
      axis: [1, 11],
      sum: 11
    }
  }
]
